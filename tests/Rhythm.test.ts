import { Rhythm } from '../lib/Rhythm'

test('Rhythm.sum', () => {
  expect(Rhythm.sum([1, 2, 3, 4])).toEqual(10);
});

test('Rhythm.positionInGroup', () => {
  expect(Rhythm.positionInGroup([2, 1], 2)).toBe(1); // e.g. in quarter grid: after half and quarter note
  expect(Rhythm.positionInGroup([1, 1], 2)).toBe(0); //
  expect(Rhythm.positionInGroup([1, 1], 3)).toBe(2); //
  expect(Rhythm.positionInGroup([1, 1, 1], 4)).toBe(3); // e.g. in 8ths grid: offbeat on 4ths 8th note (= index 3)
  expect(Rhythm.positionInGroup([1, 1, 1, 1], 3)).toBe(1); // e.g. 2 of second measure in 3/4
});

test('Rhythm.exceedsGroup', () => {
  const exceed2 = Rhythm.exceedsGroup(2);
  expect(exceed2([1], 2)).toBe(true);
  expect(exceed2([1], 1)).toBe(false);
  expect(exceed2([1, 2], 1)).toBe(false);
  expect(exceed2([1, 2], 2)).toBe(true);
  expect(exceed2([1, 2, 1], 1)).toBe(false);
});

test('Rhythm.isSyncope', () => {
  const syncope2 = Rhythm.isSyncope(2);
  expect(syncope2([], 1)).toBe(false);
  expect(syncope2([1], 1)).toBe(false);
  expect(syncope2([2], 1)).toBe(false);
  expect(syncope2([1], 2)).toBe(true);
  expect(syncope2([2], 2)).toBe(false);
  expect(syncope2([2], 1)).toBe(false);
  expect(syncope2([2], 3)).toBe(true);
})

test('Rhythm.search', () => {
  expect(Rhythm.search(4)).toEqual([
    [1, 1, 1, 1], [1, 1, 2], [1, 2, 1], [1, 3], [2, 1, 1], [2, 2], [3, 1], [4]
  ]);
  expect(Rhythm.search(8)).toEqual(
   [
     [
       1,
       1,
       1,
       1,
       1,
       1,
       1,
       1,
     ],
     [
       1,
       1,
       1,
       1,
       1,
       1,
       2,
     ],
     [
       1,
       1,
       1,
       1,
       1,
       2,
       1,
     ],
     [
       1,
       1,
       1,
       1,
       1,
       3,
     ],
     [
       1,
       1,
       1,
       1,
       2,
       1,
       1,
     ],
     [
       1,
       1,
       1,
       1,
       2,
       2,
     ],
     [
       1,
       1,
       1,
       1,
       3,
       1,
     ],
     [
       1,
       1,
       1,
       1,
       4,
     ],
     [
       1,
       1,
       1,
       2,
       1,
       1,
       1,
     ],
     [
       1,
       1,
       1,
       2,
       1,
       2,
     ],
     [
       1,
       1,
       1,
       2,
       2,
       1,
     ],
     [
       1,
       1,
       1,
       2,
       3,
     ],
     [
       1,
       1,
       1,
       3,
       1,
       1,
     ],
     [
       1,
       1,
       1,
       3,
       2,
     ],
     [
       1,
       1,
       1,
       4,
       1,
     ],
     [
       1,
       1,
       1,
       5,
     ],
     [
       1,
       1,
       2,
       1,
       1,
       1,
       1,
     ],
     [
       1,
       1,
       2,
       1,
       1,
       2,
     ],
     [
       1,
       1,
       2,
       1,
       2,
       1,
     ],
     [
       1,
       1,
       2,
       1,
       3,
     ],
     [
       1,
       1,
       2,
       2,
       1,
       1,
     ],
     [
       1,
       1,
       2,
       2,
       2,
     ],
     [
       1,
       1,
       2,
       3,
       1,
     ],
     [
       1,
       1,
       2,
       4,
     ],
     [
       1,
       1,
       3,
       1,
       1,
       1,
     ],
     [
       1,
       1,
       3,
       1,
       2,
     ],
     [
       1,
       1,
       3,
       2,
       1,
     ],
     [
       1,
       1,
       3,
       3,
     ],
     [
       1,
       1,
       4,
       1,
       1,
     ],
     [
       1,
       1,
       4,
       2,
     ],
     [
       1,
       1,
       5,
       1,
     ],
     [
       1,
       1,
       6,
     ],
     [
       1,
       2,
       1,
       1,
       1,
       1,
       1,
     ],
     [
       1,
       2,
       1,
       1,
       1,
       2,
     ],
     [
       1,
       2,
       1,
       1,
       2,
       1,
     ],
     [
       1,
       2,
       1,
       1,
       3,
     ],
     [
       1,
       2,
       1,
       2,
       1,
       1,
     ],
     [
       1,
       2,
       1,
       2,
       2,
     ],
     [
       1,
       2,
       1,
       3,
       1,
     ],
     [
       1,
       2,
       1,
       4,
     ],
     [
       1,
       2,
       2,
       1,
       1,
       1,
     ],
     [
       1,
       2,
       2,
       1,
       2,
     ],
     [
       1,
       2,
       2,
       2,
       1,
     ],
     [
       1,
       2,
       2,
       3,
     ],
     [
       1,
       2,
       3,
       1,
       1,
     ],
     [
       1,
       2,
       3,
       2,
     ],
     [
       1,
       2,
       4,
       1,
     ],
     [
       1,
       2,
       5,
     ],
     [
       1,
       3,
       1,
       1,
       1,
       1,
     ],
     [
       1,
       3,
       1,
       1,
       2,
     ],
     [
       1,
       3,
       1,
       2,
       1,
     ],
     [
       1,
       3,
       1,
       3,
     ],
     [
       1,
       3,
       2,
       1,
       1,
     ],
     [
       1,
       3,
       2,
       2,
     ],
     [
       1,
       3,
       3,
       1,
     ],
     [
       1,
       3,
       4,
     ],
     [
       1,
       4,
       1,
       1,
       1,
     ],
     [
       1,
       4,
       1,
       2,
     ],
     [
       1,
       4,
       2,
       1,
     ],
     [
       1,
       4,
       3,
     ],
     [
       1,
       5,
       1,
       1,
     ],
     [
       1,
       5,
       2,
     ],
     [
       1,
       6,
       1,
     ],
     [
       1,
       7,
     ],
     [
       2,
       1,
       1,
       1,
       1,
       1,
       1,
     ],
     [
       2,
       1,
       1,
       1,
       1,
       2,
     ],
     [
       2,
       1,
       1,
       1,
       2,
       1,
     ],
     [
       2,
       1,
       1,
       1,
       3,
     ],
     [
       2,
       1,
       1,
       2,
       1,
       1,
     ],
     [
       2,
       1,
       1,
       2,
       2,
     ],
     [
       2,
       1,
       1,
       3,
       1,
     ],
     [
       2,
       1,
       1,
       4,
     ],
     [
       2,
       1,
       2,
       1,
       1,
       1,
     ],
     [
       2,
       1,
       2,
       1,
       2,
     ],
     [
       2,
       1,
       2,
       2,
       1,
     ],
     [
       2,
       1,
       2,
       3,
     ],
     [
       2,
       1,
       3,
       1,
       1,
     ],
     [
       2,
       1,
       3,
       2,
     ],
     [
       2,
       1,
       4,
       1,
     ],
     [
       2,
       1,
       5,
     ],
     [
       2,
       2,
       1,
       1,
       1,
       1,
     ],
     [
       2,
       2,
       1,
       1,
       2,
     ],
     [
       2,
       2,
       1,
       2,
       1,
     ],
     [
       2,
       2,
       1,
       3,
     ],
     [
       2,
       2,
       2,
       1,
       1,
     ],
     [
       2,
       2,
       2,
       2,
     ],
     [
       2,
       2,
       3,
       1,
     ],
     [
       2,
       2,
       4,
     ],
     [
       2,
       3,
       1,
       1,
       1,
     ],
     [
       2,
       3,
       1,
       2,
     ],
     [
       2,
       3,
       2,
       1,
     ],
     [
       2,
       3,
       3,
     ],
     [
       2,
       4,
       1,
       1,
     ],
     [
       2,
       4,
       2,
     ],
     [
       2,
       5,
       1,
     ],
     [
       2,
       6,
     ],
     [
       3,
       1,
       1,
       1,
       1,
       1,
     ],
     [
       3,
       1,
       1,
       1,
       2,
     ],
     [
       3,
       1,
       1,
       2,
       1,
     ],
     [
       3,
       1,
       1,
       3,
     ],
     [
       3,
       1,
       2,
       1,
       1,
     ],
     [
       3,
       1,
       2,
       2,
     ],
     [
       3,
       1,
       3,
       1,
     ],
     [
       3,
       1,
       4,
     ],
     [
       3,
       2,
       1,
       1,
       1,
     ],
     [
       3,
       2,
       1,
       2,
     ],
     [
       3,
       2,
       2,
       1,
     ],
     [
       3,
       2,
       3,
     ],
     [
       3,
       3,
       1,
       1,
     ],
     [
       3,
       3,
       2,
     ],
     [
       3,
       4,
       1,
     ],
     [
       3,
       5,
     ],
     [
       4,
       1,
       1,
       1,
       1,
     ],
     [
       4,
       1,
       1,
       2,
     ],
     [
       4,
       1,
       2,
       1,
     ],
     [
       4,
       1,
       3,
     ],
     [
       4,
       2,
       1,
       1,
     ],
     [
       4,
       2,
       2,
     ],
     [
       4,
       3,
       1,
     ],
     [
       4,
       4,
     ],
     [
       5,
       1,
       1,
       1,
     ],
     [
       5,
       1,
       2,
     ],
     [
       5,
       2,
       1,
     ],
     [
       5,
       3,
     ],
     [
       6,
       1,
       1,
     ],
     [
       6,
       2,
     ],
     [
       7,
       1,
     ],
     [
       8,
     ],
  ]
  );
})